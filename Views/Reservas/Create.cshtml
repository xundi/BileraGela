@model Reservas.Models.Booking

@{
    ViewData["Title"] = "Nueva Reserva";
}

<h2 class="text-center mt-4 mb-4 text-primary">Nueva Reserva</h2>

<p class="text-muted"><strong>Recurso:</strong> @Model.Sala</p>

<form id="formReserva" asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="ResourceId" />

    <div asp-validation-summary="All" class="text-danger"></div>

    <div class="mb-3">
        <label for="FechaInicio" class="form-label">Fecha Inicio</label>

        <input asp-for="FechaInicio" type="datetime-local" class="form-control" id="FechaInicio"
               value="@((Model.FechaInicio == DateTime.MinValue ? DateTime.Now : Model.FechaInicio).ToString("yyyy-MM-ddTHH:mm"))" />
        <span asp-validation-for="FechaInicio" class="text-danger"></span>
    </div>

    <div class="mb-4">
        <label for="FechaFin" class="form-label">Fecha Fin</label>

        <input asp-for="FechaFin" type="datetime-local" class="form-control" id="FechaFin"
               value="@((Model.FechaFin == DateTime.MinValue ? DateTime.Now.AddHours(1) : Model.FechaFin).ToString("yyyy-MM-ddTHH:mm"))" />
        <span asp-validation-for="FechaFin" class="text-danger"></span>
    </div>

    <div class="text-center mt-4">
        <button type="button" class="btn btn-success" onclick="mostrarModalConfirmacion()">Continuar</button>
        <a asp-action="Index" class="btn btn-secondary ms-2">Cancelar</a>
    </div>

    <!-- Modal de confirmación -->
    <div class="modal fade" id="modalConfirmacion" tabindex="-1" aria-labelledby="modalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header bg-primary text-white">
                    <h5 class="modal-title" id="modalLabel">Confirmar reserva</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Recurso:</strong> <span id="resumen-recurso">@Model.Sala</span></p>
                    <p><strong>Inicio:</strong> <span id="resumen-inicio"></span></p>
                    <p><strong>Fin:</strong> <span id="resumen-fin"></span></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-primary">Confirmar y guardar</button>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
                function mostrarModalConfirmacion() {
            const inicio = document.getElementById("FechaInicio").value;
            const fin = document.getElementById("FechaFin").value;

            if (!inicio || !fin) {
                alert("⚠️ Debes completar ambas fechas.");
                return;
            }

            const ahora = new Date();
            const inicioDate = new Date(inicio);
            const finDate = new Date(fin);

            if (inicioDate < ahora) {
                alert("⚠️ La fecha y hora de inicio no pueden estar en el pasado.");
                return;
            }

            if (finDate <= inicioDate) {
                alert("⚠️ La fecha de fin debe ser posterior a la de inicio.");
                return;
            }

            const formatDate = (date) =>
                date.toLocaleString("es-ES", {
                    day: "2-digit", month: "2-digit", year: "numeric",
                    hour: "2-digit", minute: "2-digit"
                });

            document.getElementById("resumen-inicio").textContent = formatDate(inicioDate);
            document.getElementById("resumen-fin").textContent = formatDate(finDate);

            const modal = new bootstrap.Modal(document.getElementById('modalConfirmacion'));
            modal.show();
        }


        document.addEventListener('DOMContentLoaded', function () {
            const ahora = new Date();
            const offset = ahora.getTimezoneOffset();
            const local = new Date(ahora.getTime() - offset * 60000).toISOString().slice(0, 16);

            const inicio = document.getElementById("FechaInicio");
            const fin = document.getElementById("FechaFin");

            inicio.setAttribute("min", local);
            fin.setAttribute("min", local);

            // ⏱️ Si cambia FechaInicio, se suma 1h a FechaFin
            inicio.addEventListener("change", function () {
                const nuevaInicio = new Date(this.value);
                if (isNaN(nuevaInicio)) return;

                const nuevaFin = new Date(nuevaInicio.getTime() + 60 * 60 * 1000); // +1 hora
                const nuevaFinStr = nuevaFin.toISOString().slice(0, 16);
                fin.value = nuevaFinStr;
            });
        });
    </script>
}
