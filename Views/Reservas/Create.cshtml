@model Reservas.Models.ViewModels.ReservaViewModel
@using Microsoft.AspNetCore.Http
@{
    var tipoUsuario = Context.Session.GetInt32("UserTypeId") ?? 0;
    ViewData["Title"] = "Nueva reserva";
}

<h2 class="mb-4">📅 Nueva reserva</h2>

<div class="card mb-3">
  <div class="card-body">
    <p class="mb-2"><strong>🏫 Centro:</strong> @Model.CentroNombre</p>
    <p class="mb-2"><strong>🧩 Recurso:</strong> @Model.RecursoNombre</p>
    <p class="mb-0"><strong>📂 Tipo:</strong> @Model.TipoNombre</p>
  </div>
</div>

<form asp-action="Create" method="post">
    @Html.AntiForgeryToken()
    <input type="hidden" asp-for="CentroId" />
    <input type="hidden" asp-for="TipoId" />
    <input type="hidden" asp-for="RecursoId" />

    <div asp-validation-summary="All" class="text-danger mb-2"></div>

    <div class="mb-3">
        <label asp-for="FechaInicio" class="form-label"></label>
        <input asp-for="FechaInicio" class="form-control datetime" id="FechaInicio" />
        <span asp-validation-for="FechaInicio" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="FechaFin" class="form-label"></label>
        <input asp-for="FechaFin" class="form-control datetime" id="FechaFin" />
        <span asp-validation-for="FechaFin" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Guardar</button>
    <a asp-action="MisReservas" class="btn btn-secondary">Cancelar</a>
</form>

<!-- SweetAlert -->
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
      const form = document.querySelector("form");
      const btnGuardar = form.querySelector("button[type=submit]");

      btnGuardar.addEventListener("click", function (e) {
        e.preventDefault();

        const centro = "@Model.CentroNombre";
        const recurso = "@Model.RecursoNombre";
        const tipo = "@Model.TipoNombre";
        const inicio = document.getElementById("FechaInicio").value;
        const fin = document.getElementById("FechaFin").value;

        Swal.fire({
          title: 'Confirmar reserva',
          html: `
            <p>¿Deseas confirmar esta nueva reserva?</p>
            <hr>
            <p><b>🏫 Centro:</b> ${centro}</p>
            <p><b>🧩 Recurso:</b> ${recurso}</p>
            <p><b>📂 Tipo:</b> ${tipo}</p>
            <p><b>📅 Inicio:</b> ${inicio || "—"}</p>
            <p><b>📅 Fin:</b> ${fin || "—"}</p>
          `,
          icon: 'question',
          showCancelButton: true,
          confirmButtonText: 'Sí, confirmar',
          cancelButtonText: 'Cancelar',
          customClass: {
            confirmButton: 'btn btn-primary',
            cancelButton: 'btn btn-secondary'
          },
          buttonsStyling: false
        }).then((result) => {
          if (result.isConfirmed) {
            form.submit();
          }
        });
      });
    });
</script>


@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }

    <!-- Flatpickr core -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

    <!-- Plugin ConfirmDate -->
    <script src="https://cdn.jsdelivr.net/npm/flatpickr/dist/plugins/confirmDate/confirmDate.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/plugins/confirmDate/confirmDate.css">

    <script>
      document.addEventListener('DOMContentLoaded', function () {
        const startEl = document.getElementById('FechaInicio');
        const endEl   = document.getElementById('FechaFin');

       const confirmOpts = { 
          confirmText: 'Aceptar',
          cancelText: 'Cancelar',   // 👈 añade botón cancelar
          showAlways: false,
          theme: 'light'
        };


        // Instancias Flatpickr
        const fpIni = flatpickr(startEl, {
          enableTime: true,
          dateFormat: "Y-m-d H:i",
          time_24hr: true,
          minuteIncrement: 5,
          minDate: "today",   // 🔵 evita reservar en días pasados
          plugins: [ new confirmDatePlugin(confirmOpts) ],
          defaultDate: startEl.value || undefined,
          onChange: function(selectedDates) {
            if (selectedDates && selectedDates[0] && fpFin) {
              fpFin.set('minDate', selectedDates[0]);
              const finSel = fpFin.selectedDates[0];
              if (!finSel || finSel <= selectedDates[0]) {
                const next = new Date(selectedDates[0].getTime() + 60 * 1000); // +1 min
                fpFin.setDate(next, true);
              }
            }
          }
        });

        const fpFin = flatpickr(endEl, {
          enableTime: true,
          dateFormat: "Y-m-d H:i",
          time_24hr: true,
          minuteIncrement: 5,
          minDate: "today",   // 🔵 evita reservar en días pasados
          plugins: [ new confirmDatePlugin(confirmOpts) ],
          defaultDate: endEl.value || undefined
        });

        // Sincroniza minDate inicial de Fin según Inicio existente
        if (startEl.value) {
          const d = new Date(startEl.value.replace(' ', 'T'));
          if (!isNaN(d)) fpFin.set('minDate', d);
        }
      });
    </script>
}
