@{
    ViewData["Title"] = "Panel de Usuario";
}

<h2 class="text-center mt-4 mb-4 text-primary">Panel de Usuario</h2>

<div class="mx-auto" style="max-width: 720px;">
    <form id="panelForm" asp-controller="Reservas" asp-action="Create" method="get">
        <div class="mb-3">
            <label class="form-label">Centro</label>
            <select id="centro" name="centroId" class="form-select" asp-items="ViewBag.Centros" required>
                <option value="">-- Selecciona centro --</option>
            </select>
        </div>

        <div class="mb-3">
            <label class="form-label">Tipo de recurso</label>
            <select id="tipo" name="tipoId" class="form-select" required disabled>
                <option value="">-- Primero selecciona centro --</option>
            </select>
        </div>

        <div class="mb-4">
            <label class="form-label">Recurso</label>
            <select id="recurso" name="recursoId" class="form-select" required disabled>
                <option value="">-- Primero selecciona tipo de recurso --</option>
            </select>
        </div>

        <div class="text-center">
            <button id="continuar" type="submit" class="btn btn-info" disabled>Continuar con reserva</button>
        </div>
    </form>
</div>

@section Scripts {
<script>
(() => {
  const selCentro  = document.getElementById('centro');
  const selTipo    = document.getElementById('tipo');
  const selRecurso = document.getElementById('recurso');
  const btnCont    = document.getElementById('continuar');
  const form       = document.getElementById('panelForm');

  // Helpers ----------------------------------------------------
  const getJSON = async (url) => {
    const res = await fetch(url, { cache: 'no-store' });
    if (!res.ok) throw new Error('Error de red');
    return res.json();
  };

  const resetSelect = (el, placeholder, disabled = true) => {
    el.innerHTML = `<option value="">${placeholder}</option>`;
    el.disabled = disabled;
  };

  const resetAll = () => {
    // Mantener las opciones de centro y solo limpiar su selección
    selCentro.value = '';
    resetSelect(selTipo, '-- Primero selecciona centro --', true);
    resetSelect(selRecurso, '-- Primero selecciona tipo de recurso --', true);
    btnCont.disabled = true;
  };

  const cargarTipos = async (centroId) => {
    if (!centroId) { resetSelect(selTipo, '-- Primero selecciona centro --', true); return; }
    resetSelect(selTipo, 'Cargando tipos...', true);
    resetSelect(selRecurso, '-- Primero selecciona tipo de recurso --', true);
    const tipos = await getJSON(`/Home/GetTiposPorCentro?centroId=${centroId}`);
    resetSelect(selTipo, '-- Selecciona tipo de recurso --', false);
    tipos.forEach(t => {
      const opt = document.createElement('option');
      opt.value = t.id; opt.textContent = t.nombre;
      selTipo.appendChild(opt);
    });
  };

  const cargarRecursos = async (centroId, tipoId) => {
    if (!centroId || !tipoId) { resetSelect(selRecurso, '-- Primero selecciona tipo de recurso --', true); return; }
    resetSelect(selRecurso, 'Cargando recursos...', true);
    const recursos = await getJSON(`/Home/GetRecursosPorCentroYTipo?centroId=${centroId}&tipoId=${tipoId}`);
    resetSelect(selRecurso, '-- Selecciona recurso --', false);
    recursos.forEach(r => {
      const opt = document.createElement('option');
      opt.value = r.id; opt.textContent = r.nombre;
      selRecurso.appendChild(opt);
    });
  };

  // Eventos ----------------------------------------------------
  selCentro.addEventListener('change', async function () {
    await cargarTipos(this.value);
    resetSelect(selRecurso, '-- Primero selecciona tipo de recurso --', true);
    btnCont.disabled = true;
  });

  selTipo.addEventListener('change', async function () {
    await cargarRecursos(selCentro.value, this.value);
    btnCont.disabled = true;
  });

  selRecurso.addEventListener('change', function () {
    btnCont.disabled = !(selCentro.value && selTipo.value && selRecurso.value);
  });

  // Evitar enviar si falta algo (defensa extra)
  form.addEventListener('submit', function (e) {
    if (!(selCentro.value && selTipo.value && selRecurso.value)) {
      e.preventDefault();
      e.stopPropagation();
    }
  });

  // Siempre mostrar "Selecciona ..." al entrar o al volver atrás
  document.addEventListener('DOMContentLoaded', resetAll);
  // Al volver con botón atrás algunas veces el navegador restaura el estado desde caché (bfcache).
  // Este evento nos permite re-inicializar también en ese caso.
  window.addEventListener('pageshow', (e) => {
    if (e.persisted) resetAll();
  });
})();
</script>
}
